<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.CodeAnalysis.FxCopAnalyzers.3.3.0\build\Microsoft.CodeAnalysis.FxCopAnalyzers.props" Condition="Exists('..\packages\Microsoft.CodeAnalysis.FxCopAnalyzers.3.3.0\build\Microsoft.CodeAnalysis.FxCopAnalyzers.props')" />
  <Import Project="..\packages\Microsoft.NetFramework.Analyzers.3.3.0\build\Microsoft.NetFramework.Analyzers.props" Condition="Exists('..\packages\Microsoft.NetFramework.Analyzers.3.3.0\build\Microsoft.NetFramework.Analyzers.props')" />
  <Import Project="..\packages\Microsoft.NetCore.Analyzers.3.3.0\build\Microsoft.NetCore.Analyzers.props" Condition="Exists('..\packages\Microsoft.NetCore.Analyzers.3.3.0\build\Microsoft.NetCore.Analyzers.props')" />
  <Import Project="..\packages\Microsoft.CodeQuality.Analyzers.3.3.0\build\Microsoft.CodeQuality.Analyzers.props" Condition="Exists('..\packages\Microsoft.CodeQuality.Analyzers.3.3.0\build\Microsoft.CodeQuality.Analyzers.props')" />
  <Import Project="..\packages\Microsoft.CodeAnalysis.VersionCheckAnalyzer.3.3.0\build\Microsoft.CodeAnalysis.VersionCheckAnalyzer.props" Condition="Exists('..\packages\Microsoft.CodeAnalysis.VersionCheckAnalyzer.3.3.0\build\Microsoft.CodeAnalysis.VersionCheckAnalyzer.props')" />
  <Import Project="..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.props" Condition="Exists('..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{E807C133-1C78-4D8C-858A-5312DC095381}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Pierlam.ExpressionEval.Test</RootNamespace>
    <AssemblyName>Pierlam.ExpressionEval.Test</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.2.1.2\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.2.1.2\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ExprEval_Exec\ExprEval_Exec_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprCalculation_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprComparison_ExprCalculation.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprLogical_Xor.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_3Params_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_OneParam_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_OneParam_ExprLogical.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_OneParam_ExprLogicalNot.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_ThreeParams_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_FunctionCall_TwoParams_Basic.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_Var_Basic.cs" />
    <Compile Include="ExprEval_Parse\ExprEval_Parse_ExprCalculation_3Operands.cs" />
    <Compile Include="ExprEval_Parse\ExprEval_Parse_ExprCalculation_Basic.cs" />
    <Compile Include="ExprEval_Parse\ExprEval_Parse_ExprComparison_ExprCalculation.cs" />
    <Compile Include="TestCommon.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprLogical_And.cs" />
    <Compile Include="ExprEval_Parse\ExprEval_Parse_Operand_Operator_Operand.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprComparison_Int.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprComparison_Bool.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_ExprLogical_Not.cs" />
    <Compile Include="ExprEval_Exec\ExprEval_Exec_OperandDouble.cs" />
    <Compile Include="TestTokParser\TokParser_Fct_Param_Expr.cs" />
    <Compile Include="TestTokParser\TokParser_CP_Missing.cs" />
    <Compile Include="Scanner\Scanner_Fct.cs" />
    <Compile Include="Scanner\Scanner_NegNumber.cs" />
    <Compile Include="Scanner\Scanner_Operand_String.cs" />
    <Compile Include="TestTokParser\TokParser_AnalyzerObjectName.cs" />
    <Compile Include="TestTokParser\TokParser_ExprCalculation_Basics.cs" />
    <Compile Include="TestTokParser\TokParser_Fct_Basic.cs" />
    <Compile Include="TestTokParser\TokParser_Fct_Params.cs" />
    <Compile Include="TestTokParser\TokParser_Fct_Param_ExprLogicalNot.cs" />
    <Compile Include="TestTokParser\TokParser_OperandType_ObjectName.cs" />
    <Compile Include="TestTokParser\TokParser_OperandType_String.cs" />
    <Compile Include="TestTokParser\TokParser_OperandType_Number.cs" />
    <Compile Include="TestTokParser\TokParser_Operator_Comp_Bool.cs" />
    <Compile Include="TestTokParser\TokParser_Operator_Not_Ok.cs" />
    <Compile Include="TestTokParser\TokParser_Operator_Not_Wrong.cs" />
    <Compile Include="TestTokParser\TokParser_OperCompareBasics.cs" />
    <Compile Include="ExprEval_Parse\ExprEval_Parse_Basic.cs" />
    <Compile Include="Scanner\Scanner_A_And_B.cs" />
    <Compile Include="Scanner\Scanner_CompactTokens.cs" />
    <Compile Include="Scanner\Scanner_EmptyShort.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Scanner\Scanner_OperCompare.cs" />
    <Compile Include="TestTokParser\TokParser_two_nested_expr.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Pierlam.ExpressionEval\Pierlam.ExpressionEval.csproj">
      <Project>{c5160eda-da35-4213-8283-4426f7c9f16e}</Project>
      <Name>Pierlam.ExpressionEval</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>Ce projet fait référence à des packages NuGet qui sont manquants sur cet ordinateur. Utilisez l'option de restauration des packages NuGet pour les télécharger. Pour plus d'informations, consultez http://go.microsoft.com/fwlink/?LinkID=322105. Le fichier manquant est : {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.props'))" />
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.CodeAnalysis.VersionCheckAnalyzer.3.3.0\build\Microsoft.CodeAnalysis.VersionCheckAnalyzer.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.CodeAnalysis.VersionCheckAnalyzer.3.3.0\build\Microsoft.CodeAnalysis.VersionCheckAnalyzer.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.CodeQuality.Analyzers.3.3.0\build\Microsoft.CodeQuality.Analyzers.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.CodeQuality.Analyzers.3.3.0\build\Microsoft.CodeQuality.Analyzers.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.NetCore.Analyzers.3.3.0\build\Microsoft.NetCore.Analyzers.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.NetCore.Analyzers.3.3.0\build\Microsoft.NetCore.Analyzers.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.NetFramework.Analyzers.3.3.0\build\Microsoft.NetFramework.Analyzers.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.NetFramework.Analyzers.3.3.0\build\Microsoft.NetFramework.Analyzers.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.CodeAnalysis.FxCopAnalyzers.3.3.0\build\Microsoft.CodeAnalysis.FxCopAnalyzers.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.CodeAnalysis.FxCopAnalyzers.3.3.0\build\Microsoft.CodeAnalysis.FxCopAnalyzers.props'))" />
  </Target>
  <Import Project="..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.targets" Condition="Exists('..\packages\MSTest.TestAdapter.2.1.2\build\net45\MSTest.TestAdapter.targets')" />
</Project>